version: "3.9"

services:
  postgres:
    image: postgres:13
    container_name: pharma-postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"    # internal (used by Airflow, other containers)
      - "29092:29092"  # external (used by your Python producer on host)
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

  airflow-init:
    image: apache/airflow:2.7.3
    depends_on:
      - postgres
    entrypoint: /bin/bash
    command: -c "sleep 10 && airflow db migrate && airflow users create --username admin --firstname Admin --lastname User --role Admin --password admin --email admin@example.com"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
      - airflow_logs:/opt/airflow/logs

  airflow:
    image: apache/airflow:2.7.3
    restart: always
    depends_on:
      - airflow-init
      - postgres
      - kafka
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
      - airflow_logs:/opt/airflow/logs
    ports:
      - "8085:8080"
    command: >
      bash -c "pip install -r /requirements.txt &&
               airflow webserver -p 8080 & airflow scheduler"

volumes:
  postgres_db:
  airflow_logs:
